{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"root\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($data.msg), 1\n  /* TEXT */\n  ), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.inputValue = $event),\n    onKeypress: _cache[1] || (_cache[1] = _withKeys((...args) => $options.getPokemonData && $options.getPokemonData(...args), [\"enter\"]))\n  }, null, 544\n  /* HYDRATE_EVENTS, NEED_PATCH */\n  ), [[_vModelText, $data.inputValue]]), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.pokemon.results, (poke, idx) => {\n    return _openBlock(), _createElementBlock(\"li\", null, [_createElementVNode(\"p\", null, _toDisplayString(idx), 1\n    /* TEXT */\n    )]);\n  }), 256\n  /* UNKEYED_FRAGMENT */\n  ))])]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;;;uBAAXC,oBAUM,KAVN,cAUM,CATJC,oBAAkB,IAAlB,EAAkB,IAAlB,EAAkBC,iBAAXC,SAAW,CAAlB,EAAU;EAAA;EAAV,CASI,kBARJF,oBAEwC,OAFxC,EAEwC;IAFjCG,IAAI,EAAC,MAE4B;+DADxBD,mBAAUE,OACc;IAAhCC,UAAQ,mDAAQC,2DAAR,EAAsB,SAAtB;EAAwB,CAFxC;;EAAA,kBACgBJ,mBAOZ,EALJF,oBAIK,IAJL,EAIK,IAJL,EAIK,oBAHHD,oBAEKQ,SAFL,EAEK,IAFL,EAEKC,YAFqBC,aAAQC,OAE7B,EAFoC,CAA7BC,IAA6B,EAAvBC,GAAuB,KAApB;yBAArBb,oBAEK,IAFL,EAEK,IAFL,EAEK,CADHC,oBAAgB,GAAhB,EAAgB,IAAhB,EAAgBC,iBAAVW,GAAU,CAAhB,EAAS;IAAA;IAAT,CACG,CAFL;GAEK,CAFL;;EAAA,CAGG,EAJL,CAKI,CAVN","names":["class","_createElementBlock","_createElementVNode","_toDisplayString","$data","type","$event","onKeypress","$options","_Fragment","_renderList","_ctx","results","poke","idx"],"sourceRoot":"","sources":["D:\\zadaniya\\pokemons\\src\\components\\NewMessage.vue"],"sourcesContent":["<template>\r\n  <div class=\"root\">\r\n    <h1>{{ msg }}</h1>\r\n    <input type=\"text\"\r\n           v-model=\"inputValue\"\r\n           @keypress.enter=\"getPokemonData\">\r\n    <ul>\r\n      <li v-for=\"(poke, idx) in pokemon.results\">\r\n        <p>{{ idx }}</p>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: 'NewMessage',\r\n  data() {\r\n    return {\r\n      msg : 'Pokemons',\r\n      inputValue : '',\r\n      results: ''\r\n\r\n    }\r\n  },\r\n  methods: {\r\n    async getPokemonData(query = 5) {\r\n      let url = `https://pokeapi.co/api/v2/pokemon?limit=${this.inputValue}&offset=0`\r\n      let response = await fetch(url)\r\n      let pokemon = await response.json()\r\n      console.log(pokemon)\r\n      console.log(pokemon.results)\r\n      return pokemon\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\nh1{\r\n  font-family: Arial;\r\n  font-size: 40px;\r\n  margin: 10px;\r\n}\r\n</style>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}