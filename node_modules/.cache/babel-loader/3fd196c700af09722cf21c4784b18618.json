{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"root\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.showListPokemons && $options.showListPokemons(...args))\n  }, \"Открыть список покемонов\"), $data.notes.length ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.notes, note => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: note.id\n    }, _toDisplayString(note.url), 1\n    /* TEXT */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.prevPokemons && $options.prevPokemons(...args))\n  }, \"Предыдущие покемоны\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.nextPokemons && $options.nextPokemons(...args))\n  }, \"Следующие покемоны\")]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;;;;;;uBAAXC,oBASM,KATN,cASM,CARJC,oBAAmE,QAAnE,EAAmE;IAA1DC,OAAK,yCAAEC,+DAAF;EAAqD,CAAnE,EAAkC,0BAAlC,CAQI,EAPMC,YAAMC,wBAAhBL,oBAIK,IAJL,EAIKM,UAJL,EAIK,oBAHHN,oBAEKO,SAFL,EAEK,IAFL,EAEKC,YAFcJ,WAEd,EAFMK,IAAa,IAAT;yBAAfT,oBAEK,IAFL,EAEK;MAFsBU,GAAG,EAAED,IAAI,CAACE;IAEhC,CAFL,mBACKF,IAAI,CAACG,IADV,EACa;IAAA;IADb;GAEK,CAFL;;EAAA,CAGG,EAJL,sCAOI,EAFJX,oBAA0D,QAA1D,EAA0D;IAAjDC,OAAK,yCAAEC,uDAAF;EAA4C,CAA1D,EAA8B,qBAA9B,CAEI,EADJF,oBAAyD,QAAzD,EAAyD;IAAhDC,OAAK,yCAAEC,uDAAF;EAA2C,CAAzD,EAA8B,oBAA9B,CACI,CATN","names":["class","_createElementBlock","_createElementVNode","onClick","$options","$data","length","_hoisted_2","_Fragment","_renderList","note","key","id","url"],"sourceRoot":"","sources":["D:\\zadaniya\\pokemons\\src\\components\\PokemonsPaginations.vue"],"sourcesContent":["<template>\r\n  <div class=\"root\">\r\n    <button @click=\"showListPokemons\">Открыть список покемонов</button>\r\n    <ul v-if=\"notes.length\">\r\n      <li v-for=\"note in notes\" :key=\"note.id\">\r\n        {{ note.url }}\r\n      </li>\r\n    </ul>\r\n    <button @click=\"prevPokemons\">Предыдущие покемоны</button>\r\n    <button @click=\"nextPokemons\">Следующие покемоны</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: 'PokemonsPaginations',\r\n  data() {\r\n    return {\r\n      offset: 0,\r\n      notes: '',\r\n      btnShowHidePokemons: 'Открыть список покемонов',\r\n    }\r\n  },\r\n  methods: {\r\n     async getAllPokemonData(limit = 2000, offset = 0) {\r\n      let url = `https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=${offset}`\r\n      let response = await fetch(url)\r\n      let pokemons = await response.json()\r\n       console.log(pokemons)\r\n      return pokemons.results\r\n    },\r\n     async nextPokemons() {\r\n      this.offset = this.offset + 10\r\n      this.notes = await this.getAllPokemonData(10, this.offset)\r\n      console.log(this.offset, this.notes)\r\n    },\r\n    async prevPokemons() {\r\n      if (this.offset >= 10) {\r\n        this.offset = this.offset - 10\r\n        this.notes = await this.getAllPokemonData(10, this.offset)\r\n        console.log(this.offset)\r\n      }\r\n    },\r\n    async showListPokemons() {\r\n       if (!this.notes.length) {\r\n         this.notes = await this.getAllPokemonData(10, 0)\r\n         this.btnShowHidePokemons = 'Скрыть список покемонов'\r\n       }\r\n       if (this.notes.length === 0) {\r\n         this.notes = ''\r\n         this.btnShowHidePokemons = 'Открыть список покемонов'\r\n       }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\nh1 {\r\n  font-family: Arial;\r\n  font-size: 40px;\r\n  margin: 10px;\r\n}\r\n\r\nli {\r\n  text-decoration: none;\r\n  font-family: Arial;\r\n  font-size: 20px;\r\n  margin: 10px;\r\n}\r\n</style>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}